// src/components/ChatChanel/ReportModal.tsx
import { useState } from "react";
import { api } from "../../service/api"; // axios instance ‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå

type Props = {
  open: boolean;
  onClose: () => void;
  conversationId: number | null;
  reportedUserId?: number | null; // = partnerId ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡πâ‡∏ß‡∏¢
};

type TabKey = "rate" | "report";

export default function ReportModal({
  open,
  onClose,
  conversationId,
  reportedUserId,
}: Props) {
  const [tab, setTab] = useState<TabKey>("rate");

  // ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
  const [rating, setRating] = useState<number>(0);
  const [hover, setHover] = useState<number>(0);
  const [feedback, setFeedback] = useState("");

  // ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
  const [reason, setReason] = useState<"spam" | "harassment" | "other">("spam");
  const [detail, setDetail] = useState("");

  // loading
  const [submitting, setSubmitting] = useState(false);

  if (!open) return null;

  const partnerId = reportedUserId ?? undefined;

  const handleOverlayClick = (e: React.MouseEvent<HTMLDivElement>) => {
    if (e.target === e.currentTarget) onClose();
  };

  const submitRating = async () => {
    if (!conversationId || !partnerId) {
      alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏π‡πà‡∏™‡∏ô‡∏ó‡∏ô‡∏≤/‡∏£‡∏´‡∏±‡∏™‡∏´‡πâ‡∏≠‡∏á");
      return;
    }
    if (rating < 1 || rating > 5) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô 1‚Äì5 ‡∏î‡∏≤‡∏ß");
      return;
    }
    try {
      setSubmitting(true);
      await api.post("/ratings", {
        conversationId,
        partnerId,
        rating,
        feedback,
      });
      alert("‡∫™‡∫ª‡ªà‡∫á‡∫Ñ‡∫∞‡ªÅ‡∫ô‡∫ô‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫™‡∫≥‡∫´‡∫º‡∫±‡∫ö‡∫Ñ‡∫≥‡∫ï‡∫¥‡∫ä‡∫ª‡∫° üôè");
      onClose();
    } catch {
      alert("‡∫™‡∫ª‡ªà‡∫á‡∫Ñ‡∫∞‡ªÅ‡∫ô‡∫ô‡∫ö‡ªç‡ªà‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î ‡∫•‡∫≠‡∫á‡ªÉ‡ªù‡ªà‡∫≠‡∫µ‡∫Å‡∫Ñ‡∫±‡ªâ‡∫á");
    } finally {
      setSubmitting(false);
    }
  };

  const submitReport = async () => {
    if (!conversationId) {
      alert("‡∫ö‡ªç‡ªà‡∫û‡∫ª‡∫ö‡∫•‡∫∞‡∫´‡∫ª‡∫î‡∫´‡ªâ‡∫≠‡∫á‡∫™‡∫ª‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤");
      return;
    }
    try {
      setSubmitting(true);
      await api.post("/reports", {
        conversationId,
        reportedUserId: partnerId,
        reason,
        detail,
      });
      alert("‡∫™‡∫ª‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫á‡∫á‡∫≤‡∫ô‡ªÅ‡∫•‡ªâ‡∫ß ‡∫Ç‡∫≠‡∫ö‡ªÉ‡∫à‡∫ó‡∫µ‡ªà‡ªÅ‡∫à‡ªâ‡∫á‡ªÉ‡∫´‡ªâ üôè");
      onClose();
    } catch {
      alert("‡∫™‡∫ª‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫á‡∫á‡∫≤‡∫ô‡∫ö‡ªç‡ªà‡∫™‡∫≥‡ªÄ‡∫•‡∫±‡∫î ‡∫•‡∫≠‡∫á‡ªÉ‡ªù‡ªà‡∫≠‡∫µ‡∫Å‡∫Ñ‡∫±‡ªâ‡∫á");
    } finally {
      setSubmitting(false);
    }
  };

  const Star = ({ index }: { index: number }) => {
    const active = (hover || rating) >= index;
    return (
      <button
        type="button"
        aria-label={`${index} ‡∫î‡∫≤‡∫ß`}
        onClick={() => setRating(index)}
        onMouseEnter={() => setHover(index)}
        onMouseLeave={() => setHover(0)}
        className="text-3xl transition-transform active:scale-95"
      >
        <span className={active ? "text-yellow-500" : "text-slate-300"}>‚òÖ</span>
      </button>
    );
  };

  return (
    <div
      className="fixed inset-0 z-50 grid place-items-center bg-black/30"
      onMouseDown={handleOverlayClick}
    >
      <div
        className="w-full max-w-lg rounded-2xl bg-white p-0 shadow"
        role="dialog"
        aria-modal="true"
        onMouseDown={(e) => e.stopPropagation()}
      >
        {/* Header Tabs */}
        <div className="px-6 pt-5">
          <h3 className="text-lg font-bold">‡∫à‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫ª‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤</h3>
          <p className="text-sm text-slate-600">‡∫ä‡ªà‡∫ß‡∫ç‡∫ö‡∫≠‡∫Å‡ªÄ‡∫Æ‡∫ª‡∫≤‡ªÅ‡∫ô‡ªà‡ªÑ‡∫î‡ªâ‡∫ö‡ªç‡ªà?</p>
        </div>

        <div className="mt-4 px-3">
          <div className="grid grid-cols-2 gap-2 rounded-xl bg-slate-100 p-1">
            <button
              className={[
                "rounded-lg px-4 py-2 text-sm font-medium transition",
                tab === "rate" ? "bg-white shadow" : "text-slate-600",
              ].join(" ")}
              onClick={() => setTab("rate")}
            >
              ‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫∞‡ªÅ‡∫ô‡∫ô{" "}
            </button>
            <button
              className={[
                "rounded-lg px-4 py-2 text-sm font-medium transition",
                tab === "report" ? "bg-white shadow" : "text-slate-600",
              ].join(" ")}
              onClick={() => setTab("report")}
            >
              ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
            </button>
          </div>
        </div>

        {/* Body */}
        <div className="px-6 py-5">
          {tab === "rate" ? (
            <div>
              <p className="mb-3 text-sm text-slate-700">
                ‡∫õ‡∫∞‡∫™‡∫ª‡∫ö‡∫Å‡∫≤‡∫ô‡∫™‡∫ª‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤‡∫Ñ‡∫±‡ªâ‡∫á‡∫ô‡∫µ‡ªâ‡ªÄ‡∫õ‡∫±‡∫ô‡ªÅ‡∫ô‡∫ß‡ªÉ‡∫î‡ªÅ‡∫ô‡ªà ?
              </p>

              {/* Stars */}
              <div className="mb-4 flex items-center gap-2">
                {[1, 2, 3, 4, 5].map((i) => (
                  <Star key={i} index={i} />
                ))}
                <span className="ml-2 text-sm text-slate-600">
                  {rating ? `${rating}/5` : "‡∫ç‡∫±‡∫á‡∫ö‡ªç‡ªà‡ªÉ‡∫´‡ªâ‡∫Ñ‡∫∞‡ªÅ‡∫ô‡∫ô"}
                </span>
              </div>

              <textarea
                className="w-full rounded-xl border p-3 text-sm"
                rows={4}
                placeholder="‡∫Ç‡∫Ω‡∫ô‡∫Ñ‡∫≥‡∫ï‡∫¥‡∫ä‡∫ª‡∫° (‡∫ö‡ªç‡ªà‡∫ö‡∫±‡∫á‡∫Ñ‡∫±‡∫ö)"
                value={feedback}
                onChange={(e) => setFeedback(e.target.value)}
              />
            </div>
          ) : (
            <div>
              <p className="mb-3 text-sm text-slate-700">
                ‡∫ö‡∫≠‡∫Å‡ªÄ‡∫´‡∫î‡∫ú‡∫ª‡∫ô‡∫ó‡∫µ‡ªà‡∫ï‡ªâ‡∫≠‡∫á‡∫Å‡∫≤‡∫ô‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô‡∫Ñ‡∫π‡ªà‡∫™‡∫ª‡∫ô‡∫ó‡∫∞‡∫ô‡∫≤
              </p>

              <div className="space-y-3 mb-4">
                <label className="flex items-center gap-2">
                  <input
                    type="radio"
                    name="reason"
                    value="spam"
                    checked={reason === "spam"}
                    onChange={() => setReason("spam")}
                  />
                  <span>‡∫™‡∫∞‡ªÅ‡∫õ‡∫°/‡∫Å‡∫ß‡∫ô</span>
                </label>
                <label className="flex items-center gap-2">
                  <input
                    type="radio"
                    name="reason"
                    value="harassment"
                    checked={reason === "harassment"}
                    onChange={() => setReason("harassment")}
                  />
                  <span>‡∫Ñ‡∫∏‡∫Å‡∫Ñ‡∫≤‡∫°/‡∫Ç‡ªç‡ªâ‡∫Ñ‡∫ß‡∫≤‡∫°‡∫ö‡ªç‡ªà‡ªÄ‡ªù‡∫≤‡∫∞‡∫™‡∫ª‡∫°</span>
                </label>
                <label className="flex items-center gap-2">
                  <input
                    type="radio"
                    name="reason"
                    value="other"
                    checked={reason === "other"}
                    onChange={() => setReason("other")}
                  />
                  <span>‡∫≠‡∫∑‡ªà‡∫ô ‡ªÜ</span>
                </label>
              </div>

              <textarea
                className="w-full rounded-xl border p-3 text-sm"
                rows={4}
                placeholder="‡∫•‡∫≤‡∫ç‡∫•‡∫∞‡∫≠‡∫Ω‡∫î‡ªÄ‡∫û‡∫¥‡ªà‡∫°‡ªÄ‡∫ï‡∫¥‡∫° (‡∫ö‡ªç‡ªà‡∫ö‡∫±‡∫á‡∫Ñ‡∫±‡∫ö)"
                value={detail}
                onChange={(e) => setDetail(e.target.value)}
              />
            </div>
          )}
        </div>

        {/* Footer */}
        <div className="flex items-center justify-between gap-3 border-t px-6 py-4">
          <button
            onClick={onClose}
            className="px-4 py-2 rounded-xl border text-sm font-medium"
            disabled={submitting}
          >
            ‡∫ö‡ªç‡ªà‡ªÅ‡∫°‡ªà‡∫ô‡∫ï‡∫≠‡∫ô‡∫ô‡∫µ‡ªâ
          </button>

          {tab === "rate" ? (
            <button
              onClick={submitRating}
              disabled={submitting || rating === 0 || !partnerId}
              className="px-4 py-2 rounded-xl bg-primary text-white text-sm font-medium disabled:opacity-50"
            >
              {submitting ? "‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á..." : "‡∫™‡∫ª‡ªà‡∫á‡∫Ñ‡∫∞‡ªÅ‡∫ô‡∫ô"}
            </button>
          ) : (
            <button
              onClick={submitReport}
              disabled={submitting}
              className="px-4 py-2 rounded-xl bg-red-500 text-white text-sm font-medium disabled:opacity-50"
            >
              {submitting ? "‡∫Å‡∫≥‡∫•‡∫±‡∫á‡∫™‡∫ª‡ªà‡∫á..." : "‡∫™‡∫ª‡ªà‡∫á‡∫•‡∫≤‡∫ç‡∫á‡∫≤‡∫ô"}
            </button>
          )}
        </div>
      </div>
    </div>
  );
}
